name: CI/CD Test

on:
  pull_request:
    branches:
    - develop
    types: [closed]

jobs:
  run_test_Test:
    if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop')
    uses: ./.github/workflows/_test-template.yml

  docker_build_Test:
    if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop')
    needs: [run_test_Test]
    runs-on: ubuntu-latest
    environment:
      name: test
    outputs:
      IMAGE_TAG: ${{ steps.build_image.outputs.IMAGE_TAG }}
    steps:
    - uses: actions/checkout@v4

    - name: Create env file
      run: echo "${{ secrets.ENV_FILE }}" > .env

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      id: build_image
      run: |
        IMAGE_TAG=$(openssl rand -hex 4)
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
        echo "Building image with tag ${IMAGE_TAG}"
        set -o allexport; source .env; set +o allexport
        docker build . -f Dockerfile.server --build-arg RAILS_ENV=$RAILS_ENV -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${IMAGE_TAG}
        echo "Pushing image ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${IMAGE_TAG}"
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${IMAGE_TAG}

  deploy_Test:
    if: (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop')
    needs: docker_build_Test
    uses: ./.github/workflows/_deploy-template.yml
    secrets: inherit
    with:
      DOCKER_IMAGE_TAG: ${{ needs.docker_build_Test.outputs.IMAGE_TAG }}
      serverSelection: '1'
      environmentName: test
      approvalEnvironmentName: approval_test_deloyment
